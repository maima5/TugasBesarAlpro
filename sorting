func sorting(daftar *[MaksData]Aktivitas, jumlah int) {
	var sort string
	fmt.Println("\n\n🔃 Pilih pengurutan berdasarkan:")
	fmt.Println("    📅 Tanggal (t), 🔁 Frekuensi (f), atau 🟢 Skor Dampak (d)")
	fmt.Print("🔽 Pilih (t/f/d): ")
	fmt.Scan(&sort)
	for sort != "t" && sort != "f" && sort != "d" {
		fmt.Println("⚠️ Input tidak valid. Coba lagi.")
		fmt.Print("🔽 Pilih (t/f/d): ")
		fmt.Scan(&sort)
	}
	if sort == "t" {
		sortTanggal(&daftarAktivitas, jumlahData)
	} else if sort == "f" {
		sortFrekuensi(&daftarAktivitas, jumlahData)
	} else if sort == "d" {
		sortSkor(&daftarAktivitas, jumlahData)
	}
}
func sortTanggal(daftar *[MaksData]Aktivitas, jumlah int) {
	var urut string
	fmt.Println("Pilih daftarkan tanggal secara decending(d) atau ascending(a)")
	fmt.Print("Pilih salah satu (d/a):")
	fmt.Scan(&urut)
	if urut == "a" {
		sortTanggalAscend(daftar, jumlah)
	} else if urut == "d" {
		sortFrekuensiDescend(daftar, jumlah)
	}
	tampilkanAktivitas(*daftar, jumlah)
	fmt.Println("✅ Aktivitas berhasil didaftarkan berdasarkan tanggal.")
}
func sortTanggalAscend(daftar *[MaksData]Aktivitas, jumlah int) {
	var i, j, idx int
	var temp Aktivitas
	for i = 0; i < jumlah-1; i++ {
		idx = i
		for j = i + 1; j < jumlah; j++ {
			if (*daftar)[j].tanggal < (*daftar)[idx].tanggal {
				idx = j
			}
		}
		if idx != i {
			temp = (*daftar)[i]
			(*daftar)[i] = (*daftar)[idx]
			(*daftar)[idx] = temp
		}
	}
}
func sortTanggalDescend(daftar *[MaksData]Aktivitas, jumlah int) {
	var i, j, idx int
	var temp Aktivitas
	for i = 0; i < jumlah-1; i++ {
		idx = i
		for j = i + 1; j < jumlah; j++ {
			if (*daftar)[j].tanggal > (*daftar)[idx].tanggal {
				idx = j
			}
		}
		if idx != i {
			temp = (*daftar)[i]
			(*daftar)[i] = (*daftar)[idx]
			(*daftar)[idx] = temp
		}
	}
}
func sortFrekuensi(daftar *[MaksData]Aktivitas, jumlah int) {
	var urut string
	fmt.Println("Pilih daftarkan frekuensi secara decending(d) atau ascending(a)")
	fmt.Print("Pilih salah satu (d/a):")
	fmt.Scan(&urut)
	if urut == "d" {
		sortFrekuensiDescend(daftar, jumlah)
	} else if urut == "a" {
		sortFrekuensiAscend(daftar, jumlah)
	}
	tampilkanAktivitas(*daftar, jumlah)
	fmt.Println("✅ Aktivitas berhasil didaftarkan berdasarkan frekuensi aktivitas.")
}
func hitungFrekuensi(daftar [MaksData]Aktivitas, jumlah int, nama string) int {
	var count, i int
	for i = 0; i < jumlah; i++ {
		if daftar[i].nama == nama {
			count++
		}
	}
	return count
}
func sortFrekuensiDescend(daftar *[MaksData]Aktivitas, jumlah int) {
	var i, j, freqTemp, freqJ int
	var temp Aktivitas
	var geser bool
	for i = 1; i < jumlah; i++ {
		temp = (*daftar)[i]
		freqTemp = hitungFrekuensi(*daftar, jumlah, temp.nama)
		j = i - 1
		geser = true
		for geser && j >= 0 {
			freqJ = hitungFrekuensi(*daftar, jumlah, (*daftar)[j].nama)
			if freqJ < freqTemp {
				(*daftar)[j+1] = (*daftar)[j]
				j = j - 1
			} else {
				geser = false
			}
		}
		(*daftar)[j+1] = temp
	}
}
func sortFrekuensiAscend(daftar *[MaksData]Aktivitas, jumlah int) {
	var i, j, freqTemp, freqJ int
	var temp Aktivitas
	var geser bool
	for i = 1; i < jumlah; i++ {
		temp = (*daftar)[i]
		freqTemp = hitungFrekuensi(*daftar, jumlah, temp.nama)
		j = i - 1
		geser = true

		for geser && j >= 0 {
			freqJ = hitungFrekuensi(*daftar, jumlah, (*daftar)[j].nama)
			if freqJ > freqTemp {
				(*daftar)[j+1] = (*daftar)[j]
				j = j - 1
			} else {
				geser = false
			}
		}
		(*daftar)[j+1] = temp
	}
}

func sortskor(daftar *[MaksData]Aktivitas, jumlah int) {
	var urut string
	fmt.Println("Pilih daftarkan tanggal secara decending(d) atau ascending(a)")
	fmt.Print("Pilih salah satu (d/a):")
	fmt.Scan(&urut)
	if urut == "a" {
		sortSkorAscend(daftar, jumlah)
	} else if urut == "d" {
		sortSkorDescend(daftar, jumlah)
	}
	tampilkanAktivitas(daftarAktivitas, jumlahData)
	fmt.Println("✅ Aktivitas berhasil didaftarkan berdasarkan skor dampak aktivitas.")
}
func sortSkorAscend(daftar *[MaksData]Aktivitas, jumlah int) {
	var i, j, idx int
	var temp Aktivitas
	for i = 0; i < jumlah-1; i++ {
		idx = i
		for j = i + 1; j < jumlah; j++ {
			if (*daftar)[j].skorDampak < (*daftar)[idx].skorDampak {
				idx = j
			}
		}
		temp = (*daftar)[i]
		(*daftar)[i] = (*daftar)[idx]
		(*daftar)[idx] = temp
	}
}
func sortSkorDescend(daftar *[MaksData]Aktivitas, jumlah int) {
	var i, j, idx int
	var temp Aktivitas
	for i = 0; i < jumlah-1; i++ {
		idx = i
		for j = i + 1; j < jumlah; j++ {
			if (*daftar)[j].skorDampak > (*daftar)[idx].skorDampak {
				idx = j
			}
		}
		temp = (*daftar)[i]
		(*daftar)[i] = (*daftar)[idx]
		(*daftar)[idx] = temp
	}
}
